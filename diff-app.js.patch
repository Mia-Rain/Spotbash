--- ./web-api-auth-examples/authorization_code/app.js	2020-09-22 17:15:14.469998624 -0400
+++ ./app.js	2020-09-22 17:14:17.609998638 -0400
@@ -13,9 +13,9 @@
 var querystring = require('querystring');
 var cookieParser = require('cookie-parser');
 
-var client_id = 'CLIENT_ID'; // Your client id
-var client_secret = 'CLIENT_SECRET'; // Your secret
-var redirect_uri = 'REDIRECT_URI'; // Your redirect uri
+var client_id = 'id'; // Your client id
+var client_secret = 'sec'; // Your secret
+var redirect_uri = 'http://localhost:5000/callback'; // Your redirect uri
 
 /**
  * Generates a random string containing numbers and letters
@@ -46,14 +46,15 @@
   res.cookie(stateKey, state);
 
   // your application requests authorization
-  var scope = 'user-read-private user-read-email';
+  var scope = 'user-read-private user-read-email user-library-read playlist-modify-private user-read-currently-playing user-modify-playback-state playlist-read-collaborative user-read-playback-state';
+  // Not all of the above scopes may be used
   res.redirect('https://accounts.spotify.com/authorize?' +
     querystring.stringify({
       response_type: 'code',
       client_id: client_id,
-      scope: scope,
       redirect_uri: redirect_uri,
-      state: state
+      state: state,
+      scope: scope
     }));
 });
 
@@ -81,7 +82,7 @@
         grant_type: 'authorization_code'
       },
       headers: {
-        'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))
+        'Authorization': 'Basic ' + (Buffer.from(client_id + ':' + client_secret).toString('base64'))
       },
       json: true
     };
@@ -100,7 +101,6 @@
 
         // use the access token to access the Spotify Web API
         request.get(options, function(error, response, body) {
-          console.log(body);
         });
 
         // we can also pass the token to the browser to make requests from there
@@ -115,6 +115,12 @@
             error: 'invalid_token'
           }));
       }
+    console.log('%')
+    console.log(access_token, '\n');
+    //console.log('~');
+    console.log(refresh_token);
+    //console.log('~');
+    process.exit();
     });
   }
 });
@@ -125,7 +131,7 @@
   var refresh_token = req.query.refresh_token;
   var authOptions = {
     url: 'https://accounts.spotify.com/api/token',
-    headers: { 'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64')) },
+    headers: { 'Authorization': 'Basic ' + (Buffer.from(client_id + ':' + client_secret).toString('base64')) },
     form: {
       grant_type: 'refresh_token',
       refresh_token: refresh_token
@@ -142,6 +148,4 @@
     }
   });
 });
-
-console.log('Listening on 8888');
-app.listen(8888);
+app.listen(5000);
\ No newline at end of file
